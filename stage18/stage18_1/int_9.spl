alias  USER_SP R0;
USER_SP = SP;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 9; //mode change

[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE +1]*16) + 13] =SP;

SP=[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE +1]*16) + 11]*512 -1; 

alias file_name R1;

file_name = [[PTBR + 2*(USER_SP-4)/512]*512 + (USER_SP-4)%512];

alias counter R2;
counter =1;

alias index R3;
index = -1; 

while(counter < 60) do

if([INODE_TABLE+ counter*16 + 1]== file_name) then 

index = counter;
break;

endif;

counter = counter +1;

endwhile;


if (index == -1) then 


 alias PhysicalAddressret R4;
 PhysicalAddressret = [PTBR + 2*(USER_SP-1)/512]*512 +  (USER_SP-1)%512 ;
 [PhysicalAddressret] = -1;

 SP = USER_SP;
 [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE +1]*16) + 9] =0;

ireturn;

endif;

multipush(R0,R1,R2,R3);

R1 = 3;
R2 = [SYSTEM_STATUS_TABLE + 1];

call MOD_1;

multipop(R0,R1,R2,R3);



alias user_page R4;
user_page = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 11];

[MEMORY_FREE_LIST + user_page] = [MEMORY_FREE_LIST + user_page] +1;

[SYSTEM_STATUS_TABLE + 2] =[SYSTEM_STATUS_TABLE + 2]-1;



SP=[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE +1]*16) + 11]*512 -1; 

[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE +1]*16) + 4] = RUNNING; //state change

[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE +1]*16) + 7] =index;




[PTBR  + 0]= 63;
[PTBR  + 1]= "0100";
[PTBR  + 2]= 64;
[PTBR  + 3]= "0100";



multipush(R0,R1,R2,R3);
R1 = 1;
call MOD_2;

[PTBR  + 4]= R0;
[PTBR  + 5]= "0110";

multipop(R0,R1,R2,R3);

multipush(R0,R1,R2,R3);
R1 = 1;
call MOD_2;

[PTBR  + 6]= R0;
[PTBR  + 7]= "0110";

multipop(R0,R1,R2,R3);



multipush(R0,R1,R2,R3);
R1 = 1;
call MOD_2;

[PTBR  + 16]= R0;
[PTBR  + 17]= "0110";

multipop(R0,R1,R2,R3);

multipush(R0,R1,R2,R3);
R1 = 1;
call MOD_2;

[PTBR + 18]= R0;
[PTBR + 19]= "0110";

multipop(R0,R1,R2,R3);



alias i R5;
i = 8;

while(i<= 11)  do

if([INODE_TABLE + index*16 + i] != -1) then

multipush(R0,R1,R2,R3,R5);
R1 = 1;
call MOD_2;

[PTBR  + 8 +(i-8)*2] = R0;
[PTBR  + 8 + (i-8)*2 + 1]= "0100";

multipop(R0,R1,R2,R3,R5);


multipush(R0,R1,R2,R3,R5);

R1 = 2;
R2 = [SYSTEM_STATUS_TABLE + 1];
R4 = [INODE_TABLE + index*16 + i];
R3 = [PTBR + 8 +(i-8)*2];

call MOD_4;

multipop(R0,R1,R2,R3,R5);

else

[PTBR  + 8 +(i-8)*2]= -1;
[PTBR  + 8 + (i-8)*2 + 1]= "0000";

endif;

i=i+1;

endwhile;


[[PTBR + 16]*512] = [[PTBR + 8]*512 + 1];

SP = 8*512 ;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 0;
ireturn;
